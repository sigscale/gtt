@copyright 2018-2024 SigScale Global Inc.
@version %VERSION%
@title %DESCRIPTION%
@doc This application implements a Global Title Translation (GTT)
	application for use with the Signaling System No. 7 (SS7) protocol suite.

==Introduction==
The purpose of this application is to provide message distribution for
users of the {@link //m3ua. m3ua} application. An M3UA ASP is a `pid()'
encompassing an SCTP endpoint. An MTP3-User implemention is unconstrained.

<img alt="messaging" src="messaging.png" /><br />
<a href="messaging.png">Figure 1-1</a>

===Northbound===
The choice of {@link //m3ua/m3ua_asp_fsm. m3ua_asp_fsm} callback
module used to start the ASPs will control how the ASPs send MTP3 messages
to an MTP3-User. The `recv/9' callback function is called to handle MTP3
messages received by an ASP.

The {@link gtt_m3ua_cb} callback module implements a Signalling Connection
Control Part (SCCP) layer as an MTP3-User. A Signaling Gateway Process
(SGP) started with this callback module shall perform an SCCP Routing
Control (SCRC) function as well as SCCP Management (SCMG). Received SCCP
UnitData messages addressed to local SubSystem Numbers (SSN) are forwarded
to the configured Network Service Access Point (NSAP).  For example SSN=146
is used for CAMEL which is forwarded to the TCAP Transaction Sublayer (TSL).

Global title translation may be used to select an MTP3-User service access
point (USAP) and transform the called/calling party address.

===Southbound===
Global title translation may be used to select an M3UA application server (AS)
and transform the called/calling party address.

Distribution over the available ASPs in an AS may be supported by the
{@link gtt:select_asp/2} function. This allows load sharing through a
weighted selection mechanism which avoids ASPs with queued messages or
slow response of recent messages.

==Installation==
Before starting the application for the first time, {@link //mnesia/mnesia. mnesia}
should be initialized. Create a schema and start mnesia on all nodes
where the application {@link //m3ua. m3ua} application will run.

The following command will initialize {@link //m3ua. m3ua} on the current node.

e.g &#058;
	```
	(gtt@host)1> gtt_app:install().
	{ok, [gtt_as, gtt_ep, gtt_pc, gtt_tt]}
	'''

==Operation==
The {@link //gtt. gtt} application manages M3UA application server (AS)
state and M3UA routing keys, while the {@link //m3ua. m3ua} application
provides application server processes (ASP). The {@link //gtt. gtt}
application provides an API to provision both AS and ASP as well as
SCCP global title translation.

===Initialize M3UA===
Add a Signaling Gateway (SG) AS with point code `666' named `sg1':
```
(gtt@host)2> gtt:add_as(sg1, sg, 0, 0, [{666, [], []}], loadshare, 1, 4).
'''

Add an SCTP server endpoint (ASP), listening on port `2905', named `ep1'
and implemented by the `gtt_m3ua_cb' callback module:
```
(gtt@host)3> gtt:add_ep(ep1, {{0,0,0,0}, 2905, [{registration, static}]}, undefined, server, sgp, gtt_m3ua_cb, [{ssn, #{146 => cse_tsl}}], [sg1]).
'''

===Initialize SCCP GTT===
In the example below the SG acts as an international gateway:
```
(gtt@host)4> gtt:add_tt(0, isdn_tele, international, {gtt, international_to_national, [[1], usap, {local, cse_tsl}]}).
ok
(gtt@host)5> gtt:add_tt(0, isdn_tele, national, {gtt, national_to_international, [[1], routing_key, [{666, [], []}]]}).
ok
'''

==Database Schema==
<table id="mt">
	<caption id="mt">There are four persistent {@link //mnesia. mnesia} tables:</caption>
	<thead>
		<tr id="mt">
			<th id="mt">Table Name</th>
			<th id="mt">Description</th>
		</tr>
	</thead>
	<tbody>
		<tr id="mt">
			<td id="mt">gtt_as</td>
			<td id="mt">Application Servers (AS)</td>
		</tr>
		<tr id="mt">
			<td id="mt">gtt_ep</td>
			<td id="mt">M3UA Signaling Endpoints</td>
		</tr>
		<tr id="mt">
			<td id="mt">gtt_pc</td>
			<td id="mt">SS7 Signaling Point Codes (PC)</td>
		</tr>
		<tr id="mt">
			<td id="mt">gtt_tt</td>
			<td id="mt">GTT Translation Types (TT)</td>
		</tr>
	</tbody>
</table>

